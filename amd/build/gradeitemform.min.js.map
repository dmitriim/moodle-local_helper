{"version":3,"sources":["../src/gradeitemform.js"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","Y","gradeItemForm","selector","contextid","init","prototype","modal","id","courseid","triggers","buttonId","finalexam","search","on","e","triggerElement","currentTarget","create","type","types","SAVE_CANCEL","title","body","then","setRemoveOnClose","attr","action","setBody","getBody","setTitle","setLarge","getRoot","shown","append","bind","save","submitForm","submitFormAjax","cancel","resetFormDirtyState","find","formdata","params","jsonformdata","JSON","stringify","loadFragment","handleFormSubmissionResponse","hide","handleFormSubmissionFailure","data","toggleSubmitButton","preventDefault","formData","serialize","call","methodname","args","done","fail","submit","use","M","core_formchangechecker","reset_form_dirty_state","destroy","button","document","getElementById","disabled"],"mappings":"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","sourcesContent":["/**\n * Codebase for the grade item modal form.\n *\n * This code is based off the standard boilerplate for an AMD module.\n * See https://docs.moodle.org/dev/MForm_Modal.\n *\n * @module    local_helper/gradeitemform\n * @package   local_helper\n * @author    Dmitrii Metelkin <dmitriim@catalyst-au.net>\n * @copyright Catalyst IT\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui'],\n    function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\n\n        /**\n         * Constructor\n         *\n         * @param {String} selector used to find triggers for the new item modal.\n         * @param {int} contextid\n         *\n         * Each call to init gets it's own instance of this class.\n         */\n        var gradeItemForm = function(selector, contextid) {\n            this.contextid = contextid;\n            this.init(selector);\n        };\n\n        gradeItemForm.prototype.modal = null;\n        gradeItemForm.prototype.contextid = -1;\n        gradeItemForm.prototype.id = 0;\n        gradeItemForm.prototype.courseid = 0;\n\n        /**\n         * Initialise the class.\n         *\n         * @param {String} selector used to find triggers for the new item modal.\n         * @private\n         * @return {Promise}\n         */\n        gradeItemForm.prototype.init = function(selector) {\n            // Code is based off this example .... https://docs.moodle.org/dev/MForm_Modal.\n            var triggers = $(selector);\n\n            this.buttonId = 'ressubmit_item';\n            this.finalexam = false;\n            if ( -1 != selector.search('final') ) {\n                // This is the form for a \"final exam\" item.\n                this.finalexam = true;\n                this.buttonId = 'submit_finalexam';\n            }\n\n            triggers.on('click', function(e) {\n                var triggerElement = $(e.currentTarget);\n                return ModalFactory.create({\n                    type: ModalFactory.types.SAVE_CANCEL,\n                    title: '',\n                    body: '',\n                }, triggers).then(function(modal) {\n                    // Keep a reference to the modal.\n                    this.modal = modal;\n                    this.modal.setRemoveOnClose(true);\n\n                    this.id = triggerElement.attr('data-id');\n                    this.courseid = triggerElement.attr('data-courseid');\n                    this.action = triggerElement.attr('data-action');\n\n                    this.modal.setBody(this.getBody());\n                    var title = 'Unknown Item';  // This should never be shown.\n\n                    switch (this.action) {\n                        case 'createitemmodal':\n                            title = 'On click example 1';\n                            break;\n                        case 'createfinalmodal':\n                            title = 'On click example 2';\n                            break;\n                    }\n                    this.modal.setTitle(title);\n\n                    // Forms are big, we want a big modal.\n                    this.modal.setLarge();\n\n                    // Hide the submit buttons from the moodle form every time it is opened...\n                    // the modal already has save/cancel buttons.\n                    this.modal.getRoot().on(ModalEvents.shown, function() {\n                        this.modal.getRoot().append('<style>[data-fieldtype=submit] { display: none ! important; }</style>');\n                    }.bind(this));\n\n                    // We catch the modal save event, and use it to submit the form inside the modal.\n                    // Triggering a form submission will give JS validation scripts a chance to check for errors.\n                    this.modal.getRoot().on(ModalEvents.save, this.submitForm.bind(this));\n                    // We also catch the form submit event and use it to submit the form with ajax.\n                    this.modal.getRoot().on('submit', 'form', this.submitFormAjax.bind(this));\n\n                    // EDAMOO-4931: Prevent leave site pop-up when we cancel the form changes.\n                    this.modal.getRoot().on(ModalEvents.cancel, this.resetFormDirtyState.bind(this));\n                    // EDAMOO-4931: Prevent leave site pop-up when clicking the close button.\n                    this.modal.getRoot().on('click', '.close', this.resetFormDirtyState.bind(this));\n                    // EDAMOO-5349: Add custom id for the save button.\n                    this.modal.getRoot().find('[data-action=\"save\"]').attr('id', this.buttonId);\n\n                    return this.modal;\n                }.bind(this));\n            }.bind(this));\n        };\n\n        /**\n         * @method getBody\n         * @private\n         * @return {Promise}\n         */\n        gradeItemForm.prototype.getBody = function(formdata) {\n            if (typeof formdata === \"undefined\") {\n                formdata = {'id': this.id, 'courseid': this.courseid, 'finalexam': this.finalexam};\n            }\n            // Get the content of the modal.\n            var params = {jsonformdata: JSON.stringify(formdata)};\n            return Fragment.loadFragment('local_helper', 'item_form', this.contextid, params);\n        };\n\n        /**\n         * @method handleFormSubmissionResponse\n         * @private\n         * @return {Promise}\n         */\n        gradeItemForm.prototype.handleFormSubmissionResponse = function() {\n            this.modal.hide();\n            // We could trigger an event instead.\n            // Yuk.\n            this.resetFormDirtyState();\n        };\n\n        /**\n         * @method handleFormSubmissionFailure\n         * @private\n         * @return {Promise}\n         */\n        gradeItemForm.prototype.handleFormSubmissionFailure = function(data) {\n            // Oh noes! Epic fail :(\n            // Ah wait - this is normal. We need to re-display the form with errors!\n            // EDAMOO-5349: Prevent multiple items created on repeat mashing of submit button.\n            this.toggleSubmitButton();\n            this.modal.setBody(this.getBody(data));\n        };\n\n        /**\n         * Private method\n         *\n         * @method submitFormAjax\n         * @private\n         * @param {Event} e Form submission event.\n         */\n        gradeItemForm.prototype.submitFormAjax = function(e) {\n            // We don't want to do a real form submission.\n            e.preventDefault();\n\n            // EDAMOO-5349: Prevent multiple items created on repeat mashing of submit button.\n            this.toggleSubmitButton();\n\n            // Convert all the form elements values to a serialised string.\n            var formData = this.modal.getRoot().find('form').serialize();\n\n            // EDAMOO-3741: Dirty dirty hack because the form element\n            // was disabled so we add it here.\n            if (this.finalexam) {\n                formData += '&hidden=1';\n            }\n\n            // Now we can continue...\n            Ajax.call([{\n                methodname: 'dummy_method',\n                args: {contextid: this.contextid, jsonformdata: JSON.stringify(formData)},\n                done: this.handleFormSubmissionResponse.bind(this, formData),\n                fail: this.handleFormSubmissionFailure.bind(this, formData)\n            }]);\n        };\n\n        /**\n         * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\n         *\n         * @method submitForm\n         * @param {Event} e Form submission event.\n         * @private\n         */\n        gradeItemForm.prototype.submitForm = function(e) {\n            e.preventDefault();\n            this.modal.getRoot().find('form').submit();\n        };\n\n        /**\n         * Helper method to reset form dirty state.\n         *\n         * @method  resetFormDirtyState\n         * @return void\n         */\n        gradeItemForm.prototype.resetFormDirtyState = function () {\n            Y.use('moodle-core-formchangechecker', function() {\n                M.core_formchangechecker.reset_form_dirty_state();\n            });\n            this.modal.destroy();\n        };\n\n        /**\n         * Disable or enable submit button.\n         */\n        gradeItemForm.prototype.toggleSubmitButton = function () {\n            var button = document.getElementById(this.modal.getRoot().find('[data-action=\"save\"]').attr('id'));\n\n            if (button.disabled) {\n                button.disabled = false;\n            } else {\n                button.disabled = true;\n            }\n        };\n\n        return {\n            init: function(selector, contextid) {\n                return new gradeItemForm(selector, contextid);\n            }\n        };\n    });\n"],"file":"gradeitemform.min.js"}